package ch09.Quiz;

public class Quiz1_3 {

	/*
	 
	 1. 중첩 멤버 클래스에 대한 설명으로 틀린 것은? (class {class {} })
	 	- 인스턴스 멤버 클래스는 바깥 클래스의 객체가 있어야 사용될 수 있다
	 	- 정적 멤버 클래스는 바깥 클래스의 객체가 없어도 사용될 수 있다
	 	- 인스턴스 멤버 클래스 내부에서는 바깥 클래스의 모든 필드와 메소드를 사용할 수 있다
	 	- 정적 멤버 클래스 내부에서는 바깥 클래스의 인스턴스 필드를 사용할 수 있다 (X) (static 클래스는 static 멤버만 사용 가능, 객체생성없이 사용 가능해야므로)
	 	
	 	
	 2. 로컬 클래스에 대한 설명으로 틀린 것은? (method(){class{}}, creator(){class{}})
	 	- 로컬 클래스는 메소드 내부에 선언된 클래스를 말한다
	 	- 로컬 클래스느 바깥 클래스의 필드와 메소드를 사용할 수 있다
	 	- 로컬 클래스는 static 키워드를 이용해서 정적 클래스로 만들 수 있다 (X) (로컬 클래스는 생성자 or 메소드가 실행될 때 생성되어야 하므로써 static으로 만들 수 없다)
	 	- final 특성을 가진 매개변수나 로컬 변수만 로컬 클래스 내부에서 사용할 수 있다 (java 8부터는 final 키워드 안 써도 자동으로 final 변수로 컴파일 됨)
	 	
	 	// 로컬변수가 로컬클래스에서 사용되는 순간 final 특성을 갖게 됨 (변수의 일관성)
	 	
	 	
	 3. 익명 객체에 대한 설명으로 틀린 것은? (익명 자식객체, 익명 구현객체)
	 	- 익명 객체는 클래스를 상속하거나 인터페이스를 구현해야만 생성될 수 있다 (익명이라 이름이 없고 생성자 없이 부모가 될 클래스, 구현이 될 인터페이스의 이름으로 만들어짐)
	 	- 익명 객체는 필드, 매개변수, 로컬 변수의 초기값으로 주로 사용된다
	 	- 익명 객체에는 생성자를 선언할 수 있다 (X) (익명객체는 생성자 선언없이 {구현 코드} 바로 사용)
	 	- 익명 객체는 주로 재정의된 메소드를 멤버로 가진다
	 
	 
	 */
	
}
