

1. 스트림에 대한 설명으로 틀린 것은?
	- 스트림은 내부 반복자를 사용하기 때문에 코드가 간결해진다
	- 스트림은 요소를 분리해서 병렬 처리시킬 수 있다
	- 스트림은 람다식을 사용해서 요소 처리 내용을 기술한다
	- 스트림은 요소를 모두 처리하고 나서 처음부터 요소를 다시 반복시킬 수 있다 (X)
	
		# 스트림은 최종처리가 완료되면 재사용이 안 되므로 다시 스트림을 만들어서 사용해야 함
	


2. 스트림을 얻을 수 있는 소스가 아닌 것은?
	- 컬렉션(List)
	- int, double, long 범위 (X)
	- 디렉토리
	- 배열
	
	# 스트림은 list/set, 포장클래스(Integer/Long/Double), 디렉토리, 배열과 같은 소스를 통해 스트림을 만들 수 있음

	
3. 스트림 파이프라인에 대한 설명으로 틀린 것은?
	- 스트림을 연결해서 중간 처리와 최종 처리를 할 수 있다
	- 중간 처리 단계에서는 필터링, 매핑, 정렬, 그룹핑을 한다
	- 최종 처리 단계에서는 합계, 평균, 카운팅, 최대값, 최소값 등을 얻을 수 있다
	- 최종 처리가 없더라도 중간 처리를 할 수 있다 (X)
	
	# 파이프라인에는 최종처리가 반드시 있어야 하고 중간처리 뒤에 위치해야 스트림이 완성 됨.


4. 스트림 병렬 처리에 대한 설명으로 틀린 것은?
	- 전체 요소를 분할해서 처리한다
	- 내부적으로 포크조인 프레임워크를 이용한다
	- 병렬 처리는 순차적 처리보다 항상 빠른 처리를 한다 (X)
	- 내부적으로 스레드풀을 이용해서 스레드를 관리한다
	
	# 모든 일에는 항상이란 없음. 
	# 병렬스트림의 사용은 요소 수가 많고 요소 처리에 많은 시간이 걸리거나,
	# ArrayList와 같이 idx로 관리하는 컬렉션일 때 (TreeSet, HashSet, LinkedList의 경우 요소 분리 시간 오래걸림)
	# 사용하는 CPU의 코어성능이 좋고 그 수가 많을 때 사용하면 좋음
	

	
	
	