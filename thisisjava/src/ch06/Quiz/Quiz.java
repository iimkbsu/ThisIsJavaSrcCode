package ch06.Quiz;

public class Quiz {
	
	/*
	 1. 객체와 클래스에 대한 설명으로 틀린 것은?
	 - 클래스는 객체를 생성하기 위한 설계도(청사진)와 같은 것
	 - new 연산자로 클래스의 생성자를 호출함으로써 객체가 생성된다.
	 - 하나의 클래스로 하나의 객체만 생성할 수 있다. (x) (하나의 클래스로 하나의 객체만 생성하는 패턴은 싱글톤패턴)
	 - 객체는 클래스의 인스턴스이다. (객체가 클래스에서 만들어지면 인스턴스라 부름)
	 
	 2. 클래스 구성 맴버가 아닌 것은 무엇?
	 - 필드
	 - 생성자
	 - 메소드
	 - 로컬 변수 (x)
	 
	 3. 필드, 생성자, 메소드에 대한 설명으로 틀린 것은 무엇?
	 - 필드는 객체의 데이터를 저장한다.
	 - 생성자는 객체의 초기화를 담당
	 - 메소드는 객체의 동작 부분으로, 실행 코드를 가지고 있는 블록
	 - 클래스는 반드시 필드와 메소드를 가져야 함 (x) (메소드 없는 클래스를 라이브러리 클래스라 부름)
	 
	 4. 필드에 대한 설명으로 틀린 것?
	 - 필드는 메소드에서 사용할 수 있다
	 - 인스턴스 필드 초기화는 생성자에서 할 수 있다
	 - 필드는 반드시 생성자 선언 전에 선언되어야 한다 (x) (생성자 선언, 메소드 선언 앞 뒤로 전부 선언 가능, 단 생성자&메소드 블록 내부에서는 선언 안 됨 이건 필드가 아니라 지역변수)
	 - 필드는 초기값을 주지 않더라도 기본값으로 자동 초기화된다
	 
	 5. 생성자에 대한 설명으로 틀린 것?
	 - 객체를 생성하려면 생성자 호출이 반드시 필요한 것은 아님 (x) (생성자를 선언하고(개발자가 선언하든 JVM이 자동으로 해주든) 호출을 해야 객체가 생성됨)
	 - 생성자는 다른 생성자를 호출하기 위해 this()를 사용할 수 있다 (필드 호출이나 생성자 오버로딩에 this 사용)
	 - 생성자가 선언되지 않으면 컴파일러가 기본 생성자를 추가함 (기본생성자를 byte코드 파일에 자동 추가함)
	 - 외부에서 객체를 생성할 수 없도록 생성자에 private 접근 제한자를 붙일 수 있음
	 
	 6. 메소드에 대한 설명으로 틀린 것은?
	 - 리턴값이 없는 메소드는 리턴 타입을 void로 해야 함
	 - 리턴 타입이 있는 메소드는 리턴값을 지정하기 위해 반드시 return 문이 있어야 함
	 - 매개값의 수를 모를 경우 "..."를 이용하여 매개변수를 선언할 수 있음 (배열타입으로 생성됨)
	 - 메소드의 이름은 중복해서 선언할 수 없다 (x) (중복선언 가능, 메소드 오버로딩)
	 
	 7.메소드 오버로딩에 대한 설명으로 틀린 것은?
	 - 동일 한 이름의 메소드를 여러개 선언하는 것을 말함
	 - 반드시 리턴 타입이 달려야 함 (x)
	 - 매개변수의 타입, 수, 순서를 다르게 선언해야 함
	 - 매개값이 타입 및 수에 따라 호출된 메소드가 선택됨
	
	 8. 인스턴스 맴버와 정적 맴버에 대한 설명으로 틀린 것은?
	 - 정적 맴버는 static으로 선언된 필드와 메소드를 말함
	 - 인스턴스 필드는 생성자 및 정적 블록에서 초기화될 수 있음 (x) (static은 객체생성 없이 실행, static 생성자 및 블록에서는 인스턴스 멤버 이용 불가, this 사용 불가)
	 - 정적 필드의 정적 메소드는 객체 생성 없이 클래스를 통해 접근할 수 있음
	 - 인스턴스 필드와 메소드는 객체를 생성하고 사용해야 함
	 
	 9. final필드와 상수(static final)에 대한 설명으로 틀린 것은 무엇?
	 - final필드와 상수는 초기값이 저장되면 값을 변경할 수 없다
	 - final필드와 상수는 생성자에서 초기화될 수 있다 (x) (상수(static final)은 불변임, 클래스의 필드에서만 초기화)
	 - 상수의 이름은 대문자로 작성하는 것이 관례 (e.g. EARTHDIAMETER)
	 - 상수는 객체 생성 없이 클래스를 통해 사용할 수 있음
	 
	 10. 패키지에 대한 설명으로 틀린 것은 무엇?
	 - 패키지는 클래스들을 그룹화시키는 기능을 함
	 - 클래스가 패키지에 소속되려면 패키지 선언을 반드시 해야 함
	 - import 문은 다른 패키지의 클래스를 사용할 때 필요함
	 - com.mycom 패키지에 소속된 클래스는 com.yourcom에 옮겨 놓아도 동작함 (x) (복붙으로 클래스 옮긴다고 다른 패키지 안에서 사용할 수 있는 것이 아님)
	 
	 11. 접근 제한에 대한 설명으로 틀린 것은?
	 - 접근 제한자는 클래스, 필드, 생성자, 메소드의 사용을 제한함
	 - public 접근 제한은 아무런 제한 없이 해당 요소를 사용할 수 있음
	 - default 접근 제한은 해당 클래스 내부에서만 사용을 허가함 (x) (private에 대한 설명, default는 같은 패키지에서 사용 가능)
	 - 외부에서 접근하지 못하도록 하려면 private 접근 제한을 해야 함
	 
	 12. 다음 클래스에서 해당 멤버가, 필드, 생성자, 메소드 중 어떤 것인지 적으시오
	 
	 public class Member {
	 
	 private String name; --------------> 필드 선언
	 
	 public Member(String name){}; -------------> 생성자 선언
	 
	 public void setName(String name){}; -----------> 메소드 선언 return 값 void
	}
	  
	 */
	

}
