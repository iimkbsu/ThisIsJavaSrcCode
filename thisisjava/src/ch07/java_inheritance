
 상속 (inheritance)
 	부모클래스의 필드&메소드를 자식클래스에게 물려줌
 	
 
 클래스 상속 (단일 상속)
 	public class 자식클래스 extends 부모클래스 {}
 	
 	# private 접근제한자 필드, 메소드는 상속 안 됨
 	# final 클래스, 메소드는 상속 및 재정의 안 됨
 
 
 자식 클래스에서 부모 호출
 	super();
 
 
 자식 클래스에서 부모 메소드 호출
 	super.부모메소드();
 	
 	
 
 자식 클래스에서 부모 메소드 재정의(오버라이딩) 가능
 	@Override
 	부모 메소드(){
 		재정의
 	}
 
 
 자식 클래스에서 부모 메소드 일부 추가 가능
 	@Override
 	부모 메소드(){
 		추가 메소드
 		super.부모메소드();
 	}
 
 
 
 final 클래스로 상속 막기
 	public final class 막은클래스{}
 	
 	
 final 메소드로 재정의 막기
 	public final void method(){}
 
 ----------------------------------------------------------------------------
 
 접근제한자
 
 
 public  -------   protected   -----   [default]   ------   private
 공개				같은패키지 또는 자식			같은 패키지			내 클래스 안에서만
 
 
	클래스     	 : public, default

	생성자    	 : public, protected, default, private

	멤버필드  		 : public, protected, default, private
	
	멤버메소드 		 : public, protected, default, private
		
	지역변수  		 : 접근제한자 사용 불허
	
--------------------------------------------------------------------------

자동타입, 강제타입 변환

 부모타입 변수 = 자식타입객체 			: 자동타입변환
 
 자식타입 변수 = (자식타입)부모타입객체	: 강제타입변환, casting (자동타입변환 된 부모객체만 가능)
 
 
 
 
 추상클래스 : abstract Class
 	- 공통 필드나 메소드를 추출한 클래스 (여러 클래스에서 공통으로 사용할 때 추상클래스 하나를 만들어 상속시켜서 사용)
 	- 추상클래스로 new 연산자로 객체 생성 X
 	- 상속클래스 extends 추상클래스 {} 로 사용
 	- 상속클래스 new 연산자로 객체 생성해서 사용해야 함
 	
 	- 필드, 생성자, 메소드, 추상메소드 선언 가능
 		- abstract method(){}는 반드시 @Override 상속받은 클래스에서 재정의 해줘야 함
 		
 		
 		
 		
 봉인된 클래스 : sealed Class
 	- 자바 15부터 무분별한 클래스 상속을 막기 위해 생긴 클래스 종류 (final 클래스 제외하고 모든 클래스는 상속이 가능했음, 단일상속) (인터페이스만 다중상속 가능)
 	
 	사용방법
 	- public sealed Class 봉인클래스명 permits 상속할클래스, 상속할클래스 {}
 	
 		- public final/non-sealed Class 상속클래스명 extends 봉인클래스명 {}		
 		
 		(sealed 클래스를 상속받은 자식클래스에서는 반드시 봉인을 끝낼건지(final) 열어놓고 다른 클래스를 상속시킬건지(non-sealed) 명시해줘야 함)
 