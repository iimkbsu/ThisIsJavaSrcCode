

19장. 네트워크 입출력

	19.1 네트워크 기초
	19.2 IP 주소 얻기
	19.3 TCP 네트워킹
	19.4 UDP 네트워킹
	19.5 서버의 동시 요청 처리
	19.6 JSON 데이터 형식
	19.7 TCP 채팅 프로그램
	
-----------------------------------------------------------------------------------

	1. 네트워크 기초
	
		- 네트워크 : 여러 컴퓨터를 통신 회선으로 연결 한 것
			- LAN : Local Area Network (지역 통신망)
			- WAN : Wide Area Network (광대역 통신망)
		
		WAN ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
		┃				Internet			  ┃
		┃		Router ─────────── Router	  ┃
		┃			│				│		  ┃
		┃	LAN ━━━━━━━━┓	LAN ━━━━━━━━┓	  ┃
		┃	 ┃		│	┃	 ┃		│	┃	  ┃
		┃	 ┃	Switch	┃ 	 ┃	Switch	┃	  ┃
		┃	 ┃	│	│	┃ 	 ┃	│	│	┃	  ┃
		┃	 ┃ PC	PC	┃	 ┃ PC	PC	┃	  ┃
		┃	 ┗━━━━━━━━━━┛	 ┗━━━━━━━━━━┛	  ┃
		┃									  ┃
		┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
		
		
		
		- 서버 / 클라이언트
			- 클라이언트 : request, 데이터 및 서비스를 요청하는 프로그램 (서버에 연결 요청, 사용자가 사용할 때만 작동)
			- 서버 : response, 요청을 처리하고 데이터 및 서비스를 제공하는 프로그램 (클라이언트에 처리 응답, 24시간 대기 작동)


		- IP 주소
			- IP : Internet Protocol, 인터넷 규약
			- IP 주소는 네트워크 어댑터(LAN카드)마다 할당, 무선카드 유선카드마다 할당되므로 노트북의 경우 두 개의 IP주소가 있음
			- IP 주소 : 인터넷 규약에 따라 정해진 주소 체계
				- IPv4 : 0.0.0.0 ~ 255.255.255.255 개의 주소 개수
				- IPv6 : IPv4 주소 개수 부족을 해결하기 위한 진보된 주소 체계
				
				- 내부 IP 주소 : 사설 IP주소 (로컬 IP 주소)
					- IP 주소 부족을 해결하기 위해 일반적으로 DHCP(Dynamic Host Configuration Protocol)를 사용하여 동적 IP를 할당받음, 인터넷 공유기에서 컴퓨터나 휴대폰 등 기기에 할당하는 주소
					- Class A/B/C로 주소 대역이 나눠져서 고정되어있고 이 외의 주소는 외부IP(공인IP)주소임
				- 외부 IP 주소 : 공인 IP주소
					- 인터넷 서비스 공급자(ISP)가 제공하는 주소, 전세계 광대역 통신망에서 사용되는 유일한 주소로 외부에 공개되어있음, IP 주소 가격이 비쌈
				
			- DNS : Domain Name System, IP주소를 도메인 이름(문자)으로 매핑해주는 시스템


		# MAC 주소 : Media Access Control address, 물리 주소, 프로토콜 계층의 데이터 통신 주소, 모든 기기(라우터, 스위치, 랜카드 등)가 전부 고유 주소를 가짐
			- 인터넷은 IP주소와 MAC주소를 사용하여 통신함, IP 주소는 네트워크에 연결된 컴퓨터를 식별하는 SW 기반 논리주소이고 MAC 주소는 고유한 LAN카드(컴퓨터)를 식별하는 주소임
			- 컴퓨터간 인터넷 통신 과정은 OSI 7계층으로 이루어져 있고 MAC주소는 데이터링크 계층, IP 주소는 네트워크 계층에서 사용됨
			- MAC 주소는 ARP가 찾아주고 IP 주소는 RARP가 찾아줌



		- Port 번호
			- OS가 관리하는 서버 프로그램 연결 번호 (0 ~ 65535 , 2byte 크기)
				- 0 ~ 1023 : 국제인터넷주소관리기구(ICANN)가 특정 앱으로 미리 예약한 Port
				- 1024 ~ 49151 : 회사에서 구입, 등록하여 사용 가능한 Port
				- 49152 ~ 65535 : OS가 자동 부여하는 동적 Port / 개인목적으로 사용 가능한 Port
				
			- 1대의 컴퓨터에서 다양한 서버(웹 서버, DBMS, FTP 서버 등)프로그램이 동작하고 있는 상황에서 IP 주소로 이 컴퓨터의 네트워크 어댑터(LAN카드)까지 찾아왔다면 이후에 Port 번호로 특정 서버를 선택해서 서비스를 요청할 수 있음



-----------------------------------------------------------------------------

	2. Java에서 IP 주소 얻기

		- 내부(로컬) IP 주소 / 외부(공인) IP 주소 (또는 DNS) 얻기
		- java.net 패키지의 InetAddress 클래스 객체에 IP 주소 주인 이름(도메인)과 IP 주소를 저장함
		
		□□□□ IP 주소 얻는 InetAddress의 정적 메소드 □□□□
		
			- InetAddress.getLocalHost();
			- InetAddress.getByName();
			- InetAddress.getAllByName();
			- InetAddress.getByAddress();
			
				- InetAddress 객체를 new 연산자로 만들 수 없고 항상 위의 getXXX() 메소드로 객체를 생성해야 함
				- InetAddress의 인스턴스 메소드를 사용하려면 위 처럼 객체를 생성한 후 사용 가능
	
	
		
	□□□□ 현재 시스템의 내부(로컬) IP 주소 얻기 □□□□
	
		import java.net.InetAddress
		
		InetAddress ia = InetAddress.getLocalHost();
		
	
	□□□□ 도메인 이름을 알고있는 경우 IP 주소 얻기 □□□□
		
		import java.net.InetAddress
		
		// 하나의 도메인에 하나의 외부 IP 주소만 갖는 경우
		InetAddress ia = InetAddress.getByName(String 도메인이름);
		
		// 또는 하나의 도메인에서 여러 외부 IP 주소를 갖고 잇는 경우
		InetAddress[] iaArr = InetAddress.getAllByName(String 도메인이름);
		
		
		
		# 참고로 윈도우 CMD에서 [tracert 도메인이름] 커맨드를 입력하면 도메인에 연결된 IP주소 한 개를 얻을 수 있음



------------------------------------------------------------------------------------

	# 네트워크 OSI 7계층

		네트워크 기초.hwp 참고
		
-----------------------------------------------------------------------------------

	3. TCP 네트워킹

		- Transmission Control Protocol
		- OSI 4층 (전송계층) UDP/TCP
		- 양방향 연결형 서비스
		- 가상회선 연결 서비스
		- 스트림(패킷)단위 전송
		- 신뢰성 경로 설정 : 신뢰가 보장된 경로를 확정한 후 데이터를 스트림으로 보냄(순서대로), 데이터 손실 X
		- 메시지 전송 감독


	# 자바에서 TCP 네트워킹
	
		- 서버 쪽에서 클라이언트와 연결을 수락, 요청 처리하는 클래스
			- import java.net.ServerSocket;
				- IP 주소와 Port 번호 필요
				- accept() 메소드 사용하여 연결 수락 및 통신용 서버 socket 생성
		
		- 클라이언트 쪽에서 연결 및 처리를 요청하는 클래스, 서버-클라 데이터 주고받을 때 사용하는 클래스
			- import java.net.Socket;
			
		
		□□□□ TCP 서버 사용하기 □□□□
		
			// 서버 컴퓨터에 하나의 IP 주소만 있는 경우 방법1
			ServerSocket ss = new ServerSocket(Port번호);
			
			// 서버 컴퓨터에 하나의 IP 주소만 있는 경우 방법2, binding 사용
			ServerSocekt ss = new ServerSocket();
			ss.bind(new InetSocketAddress(Port번호));
		
		
			// 서버 컴퓨터에 여러 IP 주소가 할당되어있는 경우
			ServerSocket ss = new ServerSocket();
			ss.bind( new InetSocektAddress("연결할 특정 IP주소", Port번호) ); // IP 주소 : "XXX.XXX.XXX.XXX"
		

			------------------
			
			











